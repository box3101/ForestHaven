---
import BaseLayout from "../../layouts/BaseLayout.astro";
const pageTitle = `홈`;

import "../../css/ui.css";

// 공지사항 데이터
export interface Notice {
	title: string;
	date: string;
	link?: string;
}

export const notices: Notice[] = [
	{
		title: "공지사항 본문입니다.공지사항 본문입니다.",
		date: "2025.03.26",
		link: "/notices/1",
	},
	{
		title: "공지사항 본문입니다.공지사항 본문입니다.",
		date: "2025.03.24",
		link: "/notices/2",
	},
	{
		title: "공지사항 본문입니다.공지사항 본문입니다.",
		date: "2025.03.22",
		link: "/notices/2",
	},
	{
		title: "공지사항 본문입니다.공지사항 본문입니다.",
		date: "2025.03.20",
		link: "/notices/2",
	},
];

// 자주하는 질문
export interface qna {
	title: string;
	date: string;
	link?: string;
}

export const qna: qna[] = [
	{
		title: "자주하는 질문 본문입니다.자주하는 질문 본문입니다.",
		date: "2025.03.26",
		link: "/qna/1",
	},
	{
		title: "자주하는 질문 본문입니다.자주하는 질문 본문입니다.",
		date: "2025.03.24",
		link: "/qna/2",
	},
	{
		title: "자주하는 질문 본문입니다.자주하는 질문 본문입니다.",
		date: "2025.03.22",
		link: "/qna/2",
	},
	{
		title: "자주하는 질문 본문입니다.자주하는 질문 본문입니다.",
		date: "2025.03.20",
		link: "/qna/2",
	},
];

// 녹지소개 버튼
export interface AboutButton {
	title: string;
	subtitle?: string;
	icon: string;
	link: string;
}

export const AboutButton: AboutButton[] = [
	{
		title: "도시숲 소개",
		icon: "../img/icon_01.svg",
		link: "/about/1",
	},
	{
		title: "도시숲 소개",
		icon: "../img/icon_02.svg",
		link: "/about/2",
	},
	{
		title: "푸른도시",
		subtitle: "바로가기",
		icon: "../img/icon_03.svg",
		link: "/about/3",
	},
];

// 대관시설 카드
export interface FacilityCard {
	title: string;
	image: string;
	link: string;
}

export const FacilityCard: FacilityCard[] = [
	{
		title: "송도 솔밭 물빛누리공원",
		image: "../img/swiper_img01.png",
		link: "/facility/1",
	},
	{
		title: "내연산 치유의 숲",
		image: "../img/swiper_img02.png",
		link: "/facility/2",
	},
	{
		title: "송도 솔밭 물빛누리공원",
		image: "../img/swiper_img03.png",
		link: "/facility/3",
	},
	{
		title: "내연산 치유의 숲",
		image: "../img/swiper_img04.png",
		link: "/facility/4",
	},
	{
		title: "추가 시설 5",
		image: "../img/swiper_img01.png",
		link: "/facility/5",
	},
	{
		title: "추가 시설 6",
		image: "../img/swiper_img02.png",
		link: "/facility/6",
	},
];
---

<BaseLayout pageTitle={pageTitle}>
	<div id="main" class="main">
		<!-- 메인 배너 [s]-->
		<section class="main-banner">
			<div class="inner">
				<h2 class="banner-title">아름다운 녹지,</h2>
				<img src="../img-subtit.png" alt="" />
			</div>
		</section>
		<!-- 메인 배너 [e] -->

		<!-- 바로가기 [s] -->
		<section>
			<div class="inner">
				<ul class="info-nav">
					<li>
						<div class="info-nav-item">
							<h2>공지사항</h2>
							<a href="" title="공지사항" class="btn-plus">
								<i><span class="hide">더보기</span></i>
							</a>
						</div>
						<div class="info-wrapper">
							<div class="item">
								<div class="item_box">
									<p class="month">2025.04</p>
									<p class="day">04</p>
								</div>
								<div class="item_text">
									<em class="new">N</em>
									<span>공지사항 본문입니다.</span>
								</div>
							</div>
							<div class="item-list">
								<ul>
									{
										notices.map((notice) => (
											<li>
												<a href={notice.link}>{notice.title}</a>
												<span class="date">{notice.date}</span>
											</li>
										))
									}
								</ul>
							</div>
						</div>
					</li>
					<li>
						<div class="info-nav-item">
							<h2>자주하는 질문</h2>
							<a href="" title="자주하는질문" class="btn-plus">
								<i><span class="hide">더보기</span></i>
							</a>
						</div>
						<div class="info-wrapper">
							<div class="item type2">
								<div class="item_box">
									<p class="month">2025.04</p>
									<p class="day">04</p>
								</div>
								<div class="item_text">
									<em class="new">N</em>
									<span>자주하는 질문 본문입니다.</span>
								</div>
							</div>
							<div class="item-list">
								<ul>
									{
										qna.map((qna) => (
											<li>
												<a href={qna.link}>{qna.title}</a>
												<span class="date">{qna.date}</span>
											</li>
										))
									}
								</ul>
							</div>
						</div>
					</li>
					<li>
						<div class="info-nav-item">
							<h2>녹지 소개</h2>
						</div>
						<div class="info-wrapper">
							<ul class="about-button">
								{
									AboutButton.map((button) => (
										<li>
											<a href={button.link} class="about-btn">
												<img src={button.icon} alt="" class="icon" />
												<div class="text">
													<span class="title">{button.title}</span>
													{button.subtitle && <span class="subtitle">{button.subtitle}</span>}
												</div>
											</a>
										</li>
									))
								}
							</ul>
						</div>
					</li>
				</ul>
			</div>
		</section>
		<!-- 바로가기 [e] -->

		<!-- 대관시설 [s]-->
		<section class="main-footer-banner">
			<div class="inner">
				<h2 class="banner-title">대관시설</h2>

				<div class="facility-slider">
					<div class="swiper" id="facilitySwiper">
						<div class="swiper-wrapper">
							{
								FacilityCard.map((card, index) => (
									<div class="swiper-slide">
										<a href={card.link} class={`facility-card ${index === 0 ? "active" : ""}`}>
											<div class="card-image">
												<img src={card.image} alt={card.title} loading="lazy" />
											</div>
											<div class="card-title">{card.title}</div>
										</a>
									</div>
								))
							}
						</div>
					</div>

					<!-- Navigation buttons -->
					<div class="swiper-button-prev facility-prev" id="facilityPrev"></div>
					<div class="swiper-button-next facility-next" id="facilityNext"></div>

					<!-- Pagination -->
					<div class="swiper-pagination facility-pagination"></div>
				</div>
			</div>
		</section>
		<!-- 대관시설 [e] -->
	</div>
</BaseLayout>

<script is:inline>
	// Swiper 초기화 함수
	function initFacilitySwiper() {
		const swiperContainer = document.getElementById("facilitySwiper");

		if (!swiperContainer) {
			console.warn("Swiper container not found");
			return;
		}

		// 카드 개수 확인
		const totalCards = swiperContainer.querySelectorAll(".swiper-slide").length;
		const visibleCards = 4;

		const swiper = new Swiper("#facilitySwiper", {
			// ❌ modules 옵션 제거 - CDN 버전에서는 불필요
			// modules: [Swiper.Navigation, Swiper.Pagination],

			slidesPerView: 4,
			spaceBetween: 16,
			slidesPerGroup: 1,
			loop: false,
			speed: 300,
			centeredSlides: false,
			grabCursor: true,
			watchSlidesProgress: true,
			watchOverflow: false,
			autoHeight: false,
			allowTouchMove: true,

			navigation: {
				nextEl: ".swiper-button-next",
				prevEl: ".swiper-button-prev",
				disabledClass: "swiper-button-disabled",
			},

			pagination: {
				el: ".facility-pagination",
				clickable: true,
				bulletClass: "swiper-pagination-bullet",
				bulletActiveClass: "swiper-pagination-bullet-active",
				dynamicBullets: false,
			},

			breakpoints: {
				320: {
					slidesPerView: 1,
					spaceBetween: 0,
					width: null,
				},
				600: {
					slidesPerView: 2,
					spaceBetween: 6,
					width: null,
				},
				900: {
					slidesPerView: 3,
					spaceBetween: 12,
					width: null,
				},
				1400: {
					slidesPerView: 4,
					spaceBetween: 16,
				},
			},

			on: {
				init: function () {
					console.log("Facility Swiper initialized");
					console.log("Total cards: " + totalCards + ", Visible: " + visibleCards);

					manageNavigationVisibility(this, totalCards, visibleCards);
					updateActiveCard(this);
					updateVisibleLastCard(this);
				},
				slideChange: function () {
					updateActiveCard(this);
					updateVisibleLastCard(this);
				},
				resize: function () {
					const currentVisible = this.params.slidesPerView;
					manageNavigationVisibility(this, totalCards, currentVisible);
				},
			},
		});

		function manageNavigationVisibility(swiperInstance, total, visible) {
			const prevBtn = document.querySelector(".facility-prev");
			const nextBtn = document.querySelector(".facility-next");
			const pagination = document.querySelector(".facility-pagination");

			if (total <= visible) {
				if (prevBtn) prevBtn.classList.add("navigation-hidden");
				if (nextBtn) nextBtn.classList.add("navigation-hidden");
				if (pagination) pagination.classList.add("pagination-hidden");
			} else {
				if (prevBtn) prevBtn.classList.remove("navigation-hidden");
				if (nextBtn) nextBtn.classList.remove("navigation-hidden");
				if (pagination) pagination.classList.remove("pagination-hidden");
			}
		}

		function updateActiveCard(swiperInstance) {
			const slides = swiperInstance.slides;
			slides.forEach(function (slide, index) {
				const card = slide.querySelector(".facility-card");
				if (card) {
					if (index === swiperInstance.activeIndex) {
						card.classList.add("active");
					} else {
						card.classList.remove("active");
					}
				}
			});

			updateVisibleLastCard(swiperInstance);
		}

		function updateVisibleLastCard(swiperInstance) {
			const slides = swiperInstance.slides;
			const activeIndex = swiperInstance.activeIndex;
			const visibleCards = 4;

			slides.forEach(function (slide, index) {
				slide.classList.remove("visible-last");

				if (index === activeIndex + visibleCards - 1) {
					slide.classList.add("visible-last");
				}
			});
		}

		return swiper;
	}

	// DOM 로드 완료 후 초기화
	if (document.readyState === "loading") {
		document.addEventListener("DOMContentLoaded", initFacilitySwiper);
	} else {
		initFacilitySwiper();
	}

	// Astro 페이지 전환 시 재초기화
	document.addEventListener("astro:page-load", initFacilitySwiper);
</script>
